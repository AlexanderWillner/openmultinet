/* CVS $Id: $ */
package info.openmultinet.ontology.vocabulary; 
import com.hp.hpl.jena.rdf.model.*;
import com.hp.hpl.jena.ontology.*;
 
/**
 * Vocabulary definitions from file:/Users/robynloughnane/git/omnnew/playground-rspecs-ontology/omnlib/ontologies/omn-monitoring-genericconcepts.ttl 
 * @author Auto-generated by schemagen on 01 Sep 2015 12:45 
 */
public class Omn_monitoring_genericconcepts {
    /** <p>The ontology model that holds the vocabulary terms</p> */
    private static OntModel m_model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM, null );
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    public static final ObjectProperty locatedAt = m_model.createObjectProperty( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#locatedAt" );
    
    public static final ObjectProperty query = m_model.createObjectProperty( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#query" );
    
    public static final ObjectProperty usesProtocol = m_model.createObjectProperty( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#usesProtocol" );
    
    /** <p>Determines the latitude coordinate of a physical location.</p> */
    public static final DatatypeProperty latitude = m_model.createDatatypeProperty( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#latitude" );
    
    /** <p>Determines the longitude coordinate of a physical location.</p> */
    public static final DatatypeProperty longitude = m_model.createDatatypeProperty( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#longitude" );
    
    /** <p>Represents protocols used to transport data at the application level such 
     *  as IPFIX, SNMP, OMSP, etc.</p>
     */
    public static final OntClass ApplicationProtocol = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#ApplicationProtocol" );
    
    /** <p>Represents the method used for authentications in order to either read or 
     *  write data.</p>
     */
    public static final OntClass AuthenticationMethod = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#AuthenticationMethod" );
    
    /** <p>Represents batch of queries to retrieve data about multiple metrics of multiple 
     *  resources.</p>
     */
    public static final OntClass BatchQuery = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#BatchQuery" );
    
    /** <p>Represents an event that occurs if a condition is not satisified.</p> */
    public static final OntClass ConditionalNotSatisfiedEvent = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#ConditionalNotSatisfiedEvent" );
    
    /** <p>Represents any event or notification within a system during processing phase, 
     *  e.g CPU load is over a defined threshold, a resource is created or deleted, 
     *  etc..</p>
     */
    public static final OntClass Event = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#Event" );
    
    /** <p>Represents an event that occurs during a measurement phase.</p> */
    public static final OntClass EventAtMeasurementPhase = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#EventAtMeasurementPhase" );
    
    /** <p>Represents location of monitoring and measurement related concepts, such as 
     *  location measurements (i.e. measured metric), data collectors, etc.</p>
     */
    public static final OntClass Location = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#Location" );
    
    /** <p>Represents logical location, (e.g. URI) of FTPservice, SPARQLEndpoint, SQLServer, 
     *  WebResource, Webservice (REST, SOAP, SQREME), collectionEndpoint.</p>
     */
    public static final OntClass LogicalLocation = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#LogicalLocation" );
    
    /** <p>Represents the domain or the area that is being monitored.</p> */
    public static final OntClass MonitoringDomain = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#MonitoringDomain" );
    
    /** <p>Represents an event that occurs if there is no tool is configured to measure 
     *  the concered metric(s).</p>
     */
    public static final OntClass NoToolConfiguredToMeasureMetric = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#NoToolConfiguredToMeasureMetric" );
    
    /** <p>Represents physical location.</p> */
    public static final OntClass PhysicalLocation = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#PhysicalLocation" );
    
    /** <p>Represents protocols used for measurement data exchange and reporting.</p> */
    public static final OntClass Protocol = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#Protocol" );
    
    /** <p>Represents queries used to retrieve data.</p> */
    public static final OntClass Query = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#Query" );
    
    /** <p>Represents one single query to retrieve data about particular metric of one 
     *  or more resources.</p>
     */
    public static final OntClass SingleQuery = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#SingleQuery" );
    
    /** <p>Represents an event that occurs if a contacted tool is not available.</p> */
    public static final OntClass ToolUnavailableEvent = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#ToolUnavailableEvent" );
    
    /** <p>Represents protocol used by a measurement tool or framework at the transport 
     *  layer, e.g. TCP, UDP, SCTP, etc.</p>
     */
    public static final OntClass TransportProtocol = m_model.createClass( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#TransportProtocol" );
    
    /** <p>IPFIX protocol is used to export IP traffic flow information over the network.</p> */
    public static final Individual IPFIX = m_model.createIndividual( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#IPFIX", m_model.createClass( "http://www.w3.org/2002/07/owl#NamedIndividual" ) );
    
    /** <p>The OML Measurement Stream Protocol (OMSP) is used by the Orbit Measurement 
     *  Library (OML) to describe and transport measurement tuples between injection 
     *  points (OML clients) and processing/collection points (OML servers).</p>
     */
    public static final Individual OMSP = m_model.createIndividual( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#OMSP", m_model.createClass( "http://www.w3.org/2002/07/owl#NamedIndividual" ) );
    
    /** <p>The Stream Control Transmission Protocol (SCTP) is a transport-layer protocol. 
     *  It serves similar to the Transmission Control Protocol (TCP) and User Datagram 
     *  Protocol (UDP). It provides some of the same features of UDP and TCP, it is 
     *  message-oriented like UDP and ensures reliable, in-sequence transport of messages 
     *  with congestion control like TCP. SCTP specification @https://tools.ietf.org/html/rfc6525</p>
     */
    public static final Individual SCTP = m_model.createIndividual( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#SCTP", m_model.createClass( "http://www.w3.org/2002/07/owl#NamedIndividual" ) );
    
    /** <p>The Simple Network Management Protocol (SNMP) that is used within the OML 
     *  framework for transfering the data between the OML clients and server.</p>
     */
    public static final Individual SNMP = m_model.createIndividual( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#SNMP", m_model.createClass( "http://www.w3.org/2002/07/owl#NamedIndividual" ) );
    
    /** <p>The Transmission Control Protocol (TCP) is a transport-layer protocol, which 
     *  is one of the core members of the Internet protocol suite.</p>
     */
    public static final Individual TCP = m_model.createIndividual( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#TCP", m_model.createClass( "http://www.w3.org/2002/07/owl#NamedIndividual" ) );
    
    /** <p>The User Datagram Protocol (UDP) is a transport-layer protocol, which is one 
     *  of the core members of the Internet protocol suite.</p>
     */
    public static final Individual UDP = m_model.createIndividual( "http://open-multinet.info/ontology/omn-monitoring-genericconcepts#UDP", m_model.createClass( "http://www.w3.org/2002/07/owl#NamedIndividual" ) );
    
}
